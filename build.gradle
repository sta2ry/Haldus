plugins {
  id 'application'
  id 'org.jetbrains.kotlin.jvm' version '1.3.70'
  id 'com.github.johnrengelman.shadow' version '5.2.0'
}

ext {
  kotlinVersion = '1.3.70'
  vertxVersion = '4.0.0-SNAPSHOT'
  junitJupiterEngineVersion = '5.6.0'
}

group = 'org.featx.sta2ry.haldus'
version = '1.0.0-SNAPSHOT'

repositories {
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots'
    mavenContent {
      snapshotsOnly()
    }
  }
  mavenCentral()
  jcenter()
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}

def mainVerticleName = 'org.featx.sta2ry.haldus.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  implementation "io.vertx:vertx-circuit-breaker:$vertxVersion"
  implementation "io.vertx:vertx-service-discovery:$vertxVersion"
  implementation "io.vertx:vertx-consul-client:$vertxVersion"
  implementation "io.vertx:vertx-redis-client:$vertxVersion"
  
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-config:$vertxVersion"
  implementation "io.vertx:vertx-jdbc-client:$vertxVersion"
  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-rx-java2:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
  implementation 'com.englishtown.vertx:vertx-guice:2.3.1'

  implementation 'com.zaxxer:HikariCP:3.4.2'
  implementation 'mysql:mysql-connector-java:8.0.17'
  implementation "io.vertx:vertx-mysql-postgresql-client:$vertxVersion"

  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
